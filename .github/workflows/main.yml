name: Main

on: [push]
# on:
#   push:
#     branches:
#       - 'main'

env:
  success: ‚úÖ
  failure: üî¥
  cancelled: ‚ùå
  skipped: ‚≠ï
  node_version: 20
  true: ‚úÖ
  false: üî¥

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - name: Update packages
        run: sudo apt-get update

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          registry-url: https://registry.npmjs.org/
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install last browser
        run: npx playwright install

      - name: Create tmp
        run: mkdir tmp

      - name: Build assets
        run: node ace build --production

      - name: Run tests
        run: npm test

      - name: Notification
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.BOT_TOKEN }}
          to: ${{ secrets.CHAT_ID }}
          disable_web_page_preview: true
          message: |
            Test ${{ env[job.status] }} by ${{ github.actor }} for commit in ${{ github.ref_name }} branch.
            Comment: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
            Github action: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          registry-url: https://registry.npmjs.org/
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Copy repository content
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: 'build'
          target: '${{ secrets.APP_PATH }}/source'

      - name: Install Dependencies production
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.APP_PATH }}/source/build
            ln -s ${{ secrets.APP_PATH }}/shared/tmp ${{ secrets.APP_PATH }}/source/build/
            ln -s ${{ secrets.APP_PATH }}/shared/uploads ${{ secrets.APP_PATH }}/source/build/
            ln -s ${{ secrets.APP_PATH }}/shared/.env ${{ secrets.APP_PATH }}/source/build/
            npm ci --silent --no-progress --production
            node ace migration:run --force

      - name: Notification
        if: ${{ always() && job.status == 'failure' }}
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.BOT_TOKEN }}
          to: ${{ secrets.CHAT_ID }}
          disable_web_page_preview: true
          message: |
            Deploy ${{ env[job.status] }} by ${{ github.actor }} for ${{ github.ref_name }} branch.

            Repository: ${{ github.repository }}
            Github action: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  reload:
    name: Reload
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Reload by API
        run: curl -X POST --basic --user '${{ secrets.API_KEY }}:' ${{ secrets.API_URL }}

      - name: Health Check
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ secrets.URL }}
          max-attempts: 3
          retry-delay: 3s

      - name: Notification
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.BOT_TOKEN }}
          to: ${{ secrets.CHAT_ID }}
          disable_web_page_preview: true
          message: |
            Deploy ${{ env[job.status] }} by ${{ github.actor }} for ${{ github.ref_name }} branch.

            Repository: ${{ github.repository }}
            Github action: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
