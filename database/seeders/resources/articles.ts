import { DateTime } from 'luxon'

export default [
  {
    "title": "Utilisation de l'attribut HTML autofocus",
    "slug": "utilisation-de-l-attribut-html-autofocus",
    "body": JSON.parse(`{"time":1705012475249,"blocks":[{"id":"ZKINIWxtwm","type":"paragraph","data":{"text":"L'attribut <code class=\"inline-code\">autofocus</code> en HTML est un outil pratique pour améliorer l'expérience utilisateur sur les formulaires en ligne. Il permet de définir automatiquement le champ de saisie qui sera actif dès que la page se charge, sans nécessiter d'action supplémentaire de la part de l'utilisateur."}},{"id":"tpjFZXk-AS","type":"header","data":{"text":"<b>Comment ça marche ?</b>","level":2}},{"id":"rILvMhHzfz","type":"paragraph","data":{"text":"En intégrant l'attribut <code class=\"inline-code\">autofocus</code> à un élément de formulaire, tel qu'un champ de texte (<code class=\"inline-code\">&lt;input type=\"text\"&gt;</code>), cet élément spécifique sera mis en surbrillance ou en état de saisie dès que la page se charge, permettant à l'utilisateur de commencer à taper directement sans devoir cliquer sur le champ."}},{"id":"87jZG7SrZM","type":"header","data":{"text":"<b>Exemple :</b>","level":2}},{"id":"VzeOWEc9HE","type":"code","data":{"code":"<form action=\"/action_page.php\">\n  First name: <input type=\"text\" name=\"firstname\" autofocus /><br />\n  Last name: <input type=\"text\" name=\"lastname\" /><br />\n  <input type=\"submit\" />\n</form>\n"}},{"id":"9U4a1xd8Ju","type":"paragraph","data":{"text":"Dans cet exemple, le champ \"First name\" est marqué avec <code class=\"inline-code\">autofocus</code>. Ainsi, lorsque la page se charge, le curseur sera automatiquement positionné dans ce champ, facilitant la saisie pour l'utilisateur."}},{"id":"JzSzgHLqS0","type":"header","data":{"text":"<b>Considérations à prendre en compte :</b>","level":2}},{"id":"guMx3fZxvz","type":"list","data":{"style":"unordered","items":[{"content":"Compatibilité des navigateurs :","items":[]},{"content":"Accessibilité :","items":[]}]}},{"id":"DYk-EEoS3_","type":"paragraph","data":{"text":"En somme, l'attribut HTML <code class=\"inline-code\">autofocus</code> est un outil utile pour optimiser l'expérience utilisateur en simplifiant le processus de saisie dans les formulaires en ligne, mais son utilisation doit être équilibrée pour garantir une accessibilité et une convivialité optimales."}}],"version":"2.28.2"}`),
    "visible": true,
    "publishedOn": DateTime.fromISO("2021-06-16 00:00:00"),
    "tags": [ "html" ]
  },
  {
    "title": "Utilisation de la commande git mv pour renommer des fichiers dans Git",
    "slug": "utilisation-de-la-commande-git-mv-pour-renommer-des-fichiers-dans-git",
    "body": JSON.parse(`{"time":1705013579469,"blocks":[{"id":"FQ3hQ1nBT6","type":"paragraph","data":{"text":"La gestion des fichiers au sein d'un dépôt Git est cruciale pour maintenir un historique précis des modifications apportées à un projet. Lorsqu'il s'agit de renommer des fichiers, la commande <code class=\"inline-code\">git mv</code> devient un outil précieux."}},{"id":"9oUj9c7ec2","type":"header","data":{"text":"Qu'est-ce que git mv ?","level":2}},{"id":"or_FsZ2YN1","type":"paragraph","data":{"text":"<code class=\"inline-code\">git mv</code> est une commande Git qui permet de déplacer ou renommer des fichiers tout en préservant l'historique de version. Contrairement à la commande <code class=\"inline-code\">mv</code> du système d'exploitation, <code class=\"inline-code\">git mv</code> effectue le changement de nom du fichier tout en conservant sa traçabilité au sein du dépôt Git."}},{"id":"4HaMn3WALq","type":"header","data":{"text":"Comment l'utiliser ?","level":2}},{"id":"XrN114VSFL","type":"paragraph","data":{"text":"La syntaxe de base de <code class=\"inline-code\">git mv</code> est la suivante :"}},{"id":"0C1fS8vVAG","type":"code","data":{"code":"git mv ancien_nom nouveau_nom"}},{"id":"wQzNNJmx6O","type":"paragraph","data":{"text":"Dans cette commande, <code class=\"inline-code\">ancien_nom</code> représente le nom actuel du fichier, tandis que <code class=\"inline-code\">nouveau_nom</code> est le nouveau nom que vous souhaitez lui donner. Par exemple, pour renommer un fichier nommé <code class=\"inline-code\">MYFILE.png</code> en <code class=\"inline-code\">myfile.png</code>, on utilisera la commande suivante :"}},{"id":"jz-FOsYEIw","type":"code","data":{"code":"git mv MYFILE.png myfile.png \n"}},{"id":"D7ImzOYG3h","type":"header","data":{"text":"Pourquoi utiliser git mv ?","level":2}},{"id":"0TU4NuEIzn","type":"paragraph","data":{"text":"L'intérêt principal de <code class=\"inline-code\">git mv</code> réside dans sa capacité à suivre les changements de noms ou de chemins des fichiers au sein de l'historique Git. En utilisant cette commande, vous assurez que l'historique des modifications du fichier est préservé, ce qui est essentiel pour comprendre l'évolution d'un projet au fil du temps."}},{"id":"3AFeDIyTka","type":"paragraph","data":{"text":"En résumé, <code class=\"inline-code\">git mv</code> simplifie le processus de renommage de fichiers dans un dépôt Git tout en maintenant l'intégrité de l'historique de version."}}],"version":"2.28.2"}`),
    "visible": true,
    "publishedOn": DateTime.fromISO("2021-07-14 00:00:00"),
    "tags": [ "git" ]
  },
  {
    "title": "Obtenir une date en millisecondes en Ruby",
    "slug": "obtenir-une-date-en-millisecondes-en-ruby",
    "body": JSON.parse(`{"time":1705013897834,"blocks":[{"id":"7fwaWQAv-r","type":"paragraph","data":{"text":"En programmation, il est parfois crucial d'obtenir des timestamps précis pour mesurer le temps écoulé ou pour d'autres opérations chronologiques. En Ruby, obtenir la date en millisecondes peut se faire de manière simple et efficace."}},{"id":"3gYsIFn2Fn","type":"header","data":{"text":"<b>Utilisation de </b><b>DateTime.now.strftime(\"%Q\")</b>","level":2}},{"id":"b8v1sX58gD","type":"paragraph","data":{"text":"En Ruby, la méthode <code class=\"inline-code\">DateTime.now</code> renvoie l'instant présent, puis en utilisant <code class=\"inline-code\">strftime</code> avec le format \"<code class=\"inline-code\">%Q</code>\", on peut obtenir la date en millisecondes."}},{"id":"wpthcnEX5B","type":"code","data":{"code":"require 'date'\n\nmilliseconds = DateTime.now.strftime(\"%Q\")\nputs \"Date en millisecondes : #{milliseconds}\"\n"}},{"id":"ZGF7wU4zj_","type":"list","data":{"style":"unordered","items":[{"content":"<code class=\"inline-code\">DateTime.now</code> retourne l'instant actuel.","items":[]},{"content":"<code class=\"inline-code\">%Q</code> est un format spécifique utilisé avec <b>strftime</b> pour représenter les millisecondes.","items":[]}]}},{"id":"17OKhRbEUr","type":"paragraph","data":{"text":"Lorsque vous exécutez ce code, il affichera la date actuelle avec précision jusqu'aux millisecondes."}},{"id":"LnVkafdvpJ","type":"header","data":{"text":"<b>Utilisation du résultat</b>","level":2}},{"id":"Dxn4_knK4B","type":"paragraph","data":{"text":"La valeur retournée par <code class=\"inline-code\">DateTime.now.strftime(\"%Q\") </code>peut être utilisée dans divers scénarios, notamment pour mesurer les durées, pour des opérations temporelles précises ou pour créer des identifiants uniques basés sur le temps."}},{"id":"RlCKeh1Av0","type":"paragraph","data":{"text":"Par exemple, pour mesurer le temps d'exécution d'une fonction :"}},{"id":"8uLTGARmJH","type":"code","data":{"code":"start_time = DateTime.now.strftime(\"%Q\").to_i # La fonction ou le code à mesurer\nend_time = DateTime.now.strftime(\"%Q\").to_i \nelapsed_time = end_time - start_time\n\nputs \"Temps d'exécution : #{elapsed_time} millisecondes\"\n"}},{"id":"2P6DXEzkfv","type":"header","data":{"text":"<b>Conclusion</b>","level":2}},{"id":"IvKZsv1k1J","type":"paragraph","data":{"text":"Obtenir la date en millisecondes en Ruby est une opération utile pour de nombreux cas d'utilisation. En utilisant <code class=\"inline-code\">DateTime.now.strftime(\"%Q\")</code>, vous pouvez facilement obtenir un timestamp précis jusqu'aux millisecondes pour diverses applications dans vos projets Ruby."}}],"version":"2.28.2"}`),
    "visible": true,
    "publishedOn": DateTime.fromISO("2021-06-24 00:00:00"),
    "tags": [ "ruby" ]
  }
]
